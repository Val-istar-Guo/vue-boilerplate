{"version":3,"file":"index.js","sources":["../src/class/error/missing-file-error.ts","../src/prompters/inquirer.ts","../src/utils/logger.ts","../src/utils/recursive-execte.ts","../src/utils/install-deps.ts","../src/utils/diff-file.ts","../src/utils/is-relative-path.ts","../src/utils/relative-path.ts","../src/utils/dir-exist.ts","../src/utils/is-root-dir-of-repo.ts","../src/utils/is-child-path-of.ts","../src/utils/is-empty-dir.ts","../src/utils/check-work-dir.ts","../src/utils/validate-git-repo-url.ts","../src/utils/is-directory.ts","../src/class/effect.ts","../src/class/file/compiled-file.ts","../src/consts/encoding.ts","../src/consts/upgrade-type.ts","../src/consts/path.ts","../src/infer-encoding/infer-encoding-normally.ts","../src/infer-encoding/infer-encoding-by-mapping.ts","../src/infer-encoding/infer-encoding-immobile.ts","../src/class/file/file.ts","../src/class/repository/repository.ts","../src/class/repository/git-repository.ts","../src/class/repository/local-repository.ts","../src/class/repository/npm-repository.ts","../src/class/compiler.ts","../src/class/handler.ts","../src/class/hook.ts","../src/schema/index.ts","../src/loader/load-milirc.ts","../src/loader/load-npm-config.ts","../src/class/project.ts","../src/class/question.ts","../src/class/resouce.ts","../src/class/rule.ts","../src/class/template.ts","../src/handlers/ejs.ts","../src/handlers/merge/merge-json.ts","../src/handlers/merge/merge-ignore.ts","../src/handlers/merge/merge-yaml.ts","../src/handlers/merge/index.ts","../src/handlers/exist.ts","../src/handlers/extract-area.ts","../src/handlers/mustache.ts","../src/handlers/ignore-when.ts","../src/handlers/delete-when.ts","../src/handlers/rename.ts","../src/internal.ts","../src/commands/init.ts","../src/commands/upgrade.ts","../src/commands/update.ts","../src/commands/clean.ts","../src/commands/outdated.ts","../src/commands/check.ts"],"sourcesContent":["import { CustomError } from 'ts-custom-error'\n\nexport class MissingFileError extends CustomError {\n  public file: string\n\n  constructor(file) {\n    super(`Cannot find ${file}`)\n\n    this.file = file\n  }\n}","import { Prompter } from '@/internal'\nimport inquirer from 'inquirer'\n\nconst inquirerPrompter: Prompter = async questions => await inquirer.prompt(questions)\n\nexport default inquirerPrompter\n","import { getLogger } from 'log4js'\n\nconst logger = getLogger('mili-core')\n\nif (process.env.NODE_ENV === 'development') logger.level = 'debug'\nelse logger.level = 'info'\n\nexport default logger\n","import { join, isAbsolute } from 'path'\nimport glob from 'micromatch'\nimport { Effect } from '@/internal'\n\n\ninterface Err {\n  readonly dir: string\n  readonly message: string\n}\n\nconst execteFuncInSubproject = async(func: Function, dir: string, options: any, errors: Err[]): Promise<void> => {\n  const stats = await Effect.fs.stat(dir)\n  if (!stats.isDirectory()) return\n\n  if (await Effect.fs.pathExists(join(dir, '.milirc.yml'))) {\n    Effect.logger.info(`Find project ${dir}`)\n    try {\n      const newOptions = { ...options, cwd: dir }\n      await func(newOptions)\n    } catch (e) {\n      errors.push({ dir, message: e.message })\n    } finally {\n      console.log('\\n')\n    }\n  }\n\n  let folders = await Effect.fs.readdir(dir)\n  folders = folders\n    .map(filename => join(dir, filename))\n    .filter(filepath => !glob.isMatch(filepath, options.ignore))\n\n  /**\n   * NOTE: There should upgrade one by one,\n   *       because it's possible that two of these projects were used same template,\n   *       resulting in template download conflict.\n   */\n  for (const folder of folders) {\n    await execteFuncInSubproject(func, folder, options, errors)\n  }\n}\n\nexport default (func: Function) => async(options: any): Promise<void> => {\n  const {\n    cwd = process.cwd(),\n    ignore = [],\n    recursive = false,\n  } = options\n\n  if (!recursive) {\n    await func(options)\n  } else {\n    const absolutePathIgnored = ignore.map((item: string) => {\n      if (!isAbsolute(item)) return join(cwd, item)\n      return item\n    })\n\n    const newOptions = {\n      ...options,\n      ignore: absolutePathIgnored,\n    }\n    const errors: Err[] = []\n    await execteFuncInSubproject(func, cwd, newOptions, errors)\n\n    if (errors.length) {\n      errors.forEach(error => {\n        Effect.logger.error([\n          '',\n          `Fail: ${error.dir}.`,\n          `Because: ${error.message}`,\n          '',\n        ].join('\\n'))\n      })\n\n      throw new Error('Please fix the error.')\n    }\n  }\n}\n","import { exec } from 'child_process'\nimport logger from './logger'\nimport { Path } from '@/consts'\n\n\nexport default (path: Path) => new Promise((resolve, reject) => {\n  logger.info('install template dependencies...')\n\n  exec('npm install --production', { cwd: path }, (error, stdout, stderr) => {\n    if (error) {\n      logger.error('Unable install template dependencies')\n      return reject(error)\n    }\n\n    // process.stdout.write(stdout)\n    process.stderr.write(stderr)\n    resolve()\n  })\n})\n\n","import { diffLines, Change } from 'diff'\nimport chalk from 'chalk'\nimport { isNil } from 'ramda'\n\n\nconst createLineNumberFormater = (maxOldLineNumberLength: number, maxNewLineNumberLength: number) => (oldNumber: number | null, newNumber: number | null) => {\n  const oldNumberStr = isNil(oldNumber) ? ' ' : String(oldNumber)\n  const newNumberStr = isNil(newNumber) ? ' ' : String(newNumber)\n\n  const oldN = oldNumberStr.padEnd(maxOldLineNumberLength, ' ')\n  const newN = newNumberStr.padEnd(maxNewLineNumberLength, ' ')\n\n  return `${oldN}|${newN} `\n}\n\ntype LineFormater = (oldNumber: number | null, newNumber: number | null, tag: string, str: string, fold?: boolean) => string\nconst createLineFormater = (maxOldLineNumber: number, maxNewLineNumber: number): LineFormater => {\n  const maxOldLineNumberLength = String(maxOldLineNumber).length\n  const maxNewLineNumberLength = String(maxNewLineNumber).length\n  const formatLineNumber = createLineNumberFormater(maxOldLineNumberLength, maxNewLineNumberLength)\n\n  return (oldNumber, newNumber, tag, str, fold) => {\n    let lines = str.match(/((.*\\n)|(.+$))/g) || []\n\n    lines = lines\n      .map((line, i) => {\n        const oldNumberWithOffset = oldNumber && oldNumber + i\n        const newNumberWithOffset = newNumber && newNumber + i\n        const lineNumber = formatLineNumber(oldNumberWithOffset, newNumberWithOffset)\n        return `${lineNumber} ${tag} ${line.replace(/(\\n$)/, '')}\\n`\n      })\n\n    if (fold && lines.length > 2) {\n      const dot = '...\\n'.padStart(maxOldLineNumberLength + 3, ' ')\n      lines.splice(1, lines.length - 2, dot)\n    }\n\n    return lines.join('')\n  }\n}\n\ntype EndLineValidater = (i: number) => boolean\nconst createEndLineValider = (diffPairs: Change[]): EndLineValidater => {\n  const index = [...diffPairs].reverse().findIndex(item => !item.added && !item.removed)\n  const count = diffPairs.length - 1\n  const lastSamePairIndex = index >= 0 ? count - index : index\n\n  return i => {\n    if (lastSamePairIndex < i) return true\n    else if (lastSamePairIndex === diffPairs.length - 1 && lastSamePairIndex === i) return true\n    return false\n  }\n}\n\n\ninterface ShowDiffOptions {\n  fold?: boolean\n}\n\nexport default function showDiff(\n  filename: string,\n  oldContent: string,\n  newContent: string,\n  options: ShowDiffOptions = {}\n): string {\n  let str = ''\n  let oldLineNumber = 1\n  let newLineNumber = 1\n  const maxOldLineNumber = oldContent.split('\\n').length\n  const maxNewLineNumber = oldContent.split('\\n').length\n  const formatLine = createLineFormater(maxOldLineNumber, maxNewLineNumber)\n\n  const diffPairs = diffLines(oldContent, newContent)\n  const isEndLine = createEndLineValider(diffPairs)\n\n\n  diffPairs.forEach(({ added, removed, value }, i) => {\n    const needFillEndLine = isEndLine(i)\n\n    const inc = value.split('\\n').length - 1\n\n    if (added) {\n      const strWithoutColor = formatLine(null, newLineNumber, '+', value)\n\n      str += chalk.green(strWithoutColor)\n      newLineNumber += inc\n    } else if (removed) {\n      const strWithoutColor = formatLine(oldLineNumber, null, '-', value)\n\n      str += chalk.red(strWithoutColor)\n      oldLineNumber += inc\n    } else {\n      const strWithoutColor = formatLine(oldLineNumber, newLineNumber, ' ', value, options.fold)\n      str += chalk.grey(strWithoutColor)\n\n      newLineNumber += inc\n      oldLineNumber += inc\n    }\n\n    /**\n     * Add an empty line,\n     * if '\\n' at the end of file.\n     * So, It's easy to tell if the last line end with '\\n'\n     */\n    if (needFillEndLine && /\\n$/.test(value)) {\n      if (added) {\n        const strWithoutColor = formatLine(null, newLineNumber, '+', '\\n')\n        str += chalk.green(strWithoutColor)\n        newLineNumber += 1\n      } else if (removed) {\n        const strWithoutColor = formatLine(oldLineNumber, null, '-', '\\n')\n        str += chalk.red(strWithoutColor)\n        oldLineNumber += 1\n      } else {\n        const strWithoutColor = formatLine(oldLineNumber, newLineNumber, ' ', '\\n')\n        str += chalk.grey(strWithoutColor)\n        newLineNumber += 1\n        oldLineNumber += 1\n      }\n    }\n  })\n\n  const headerLength = filename.length + 4\n\n  const header = chalk.yellow([\n    Array(headerLength).fill('=').join(''),\n    `  ${filename}  `,\n    Array(headerLength).fill('-').join(''),\n  ].join('\\n'))\n  const footer = chalk.yellow(Array(headerLength).fill('=').join(''))\n\n  return ['\\n', header, str, footer].join('\\n')\n}\n","export default (path: string): boolean => /^\\.\\.?\\//.test(path)\n","import { relative } from 'path'\n\nexport default (root: string, path: string) => `./${relative(root, path)}`\n","import { isDirectory } from '@/utils'\nimport { Effect } from '@/internal'\n\n\nexport default async(path: string): Promise<boolean> => {\n  const exist = await Effect.fs.pathExists(path)\n  if (!exist) return false\n\n  return await isDirectory(path)\n}\n","import git from 'simple-git/promise'\nimport dirExist from './dir-exist'\n\n\nexport default async(path: string) => {\n  if (!await dirExist(path)) return false\n  if (!await git(path).checkIsRepo()) return false\n\n  const toplevel = await git(path).revparse(['--show-toplevel'])\n  if (toplevel.replace(/\\n$/, '') !== path) return false\n\n  return true\n}\n","export default (parent: string) => (child: string): boolean => {\n  if (child === parent) return false\n  const parentTokens = parent.split('/').filter(i => i.length)\n  const childTokens = child.split('/').filter(i => i.length)\n  return parentTokens.every((t, i) => childTokens[i] === t)\n}\n","import { Effect } from '@/internal'\n\nexport default async(path: string): Promise<boolean> => {\n  const files = await Effect.fs.readdir(path)\n  return !files.length\n}\n","import { join } from 'path'\nimport git from 'simple-git/promise'\nimport { isChildPathOf, isEmptyDir } from '@/utils'\n\n\nconst reminder = [\n  'This command may cause some files to be overwritten',\n  \"If you're sure you want to run this command, rerun it with --force.\",\n].join('\\n')\n\nconst isWorkDirClean = async(path: string): Promise<boolean> => {\n  const isRepo = await git(path).checkIsRepo()\n  if (!isRepo) throw new Error('The work directory checked should be an repository')\n\n  const { files } = await git(path).status()\n  let toplevel = await git(path).revparse(['--show-toplevel'])\n  toplevel = toplevel.replace(/\\n$/, '')\n\n  return !files\n    .map(file => join(toplevel, file.path))\n    .filter(isChildPathOf(path))\n    .length\n}\n\nexport default async(path: string): Promise<void> => {\n  const isRepo = await git(path).checkIsRepo()\n\n  if (!isRepo && !(await isEmptyDir(path))) {\n    throw new Error([\n      'The project directory is not a git repository and is a non-empty folder.',\n      reminder,\n    ].join('\\n'))\n  } else if (isRepo && !(await isWorkDirClean(path))) {\n    throw new Error([\n      'Git working directory not clean',\n      reminder,\n    ].join('\\n'))\n  }\n}\n","\nconst gitUrlRegexp = /((git|ssh|http(s)?)|(git@[\\w.]+))(:(\\/\\/)?)([\\w.@:/\\-~]+)(\\.git)(\\/)?$/\n\nexport default function(str: string): boolean {\n  return gitUrlRegexp.test(str)\n}","import { Effect } from '@/internal'\n\nexport default async function(path: string): Promise<boolean> {\n  const stats = await Effect.fs.stat(path)\n  return stats.isDirectory()\n}\n","import fse, { WriteFileOptions, CopyOptions, EnsureOptions, ReadOptions, Stats, WriteOptions } from 'fs-extra'\nimport { Prompter } from './question'\nimport { inquirerPrompter } from '@/prompters'\nimport { logger } from '@/utils'\n\n\nexport interface FileSystem {\n  writeFile: (file: string, data: any, options?: WriteFileOptions | string) => Promise<void>\n  readFile: (file: string, encoding: string) => Promise<string>\n  pathExists: (path: string) => Promise<boolean>\n  remove: (dir: string) => Promise<void>\n  emptyDir: (path: string) => Promise<void>\n  copy: (src: string, dest: string, options?: CopyOptions) => Promise<void>\n  ensureDir: (path: string, options?: EnsureOptions | number) => Promise<void>\n  readJSON: (file: string, options?: ReadOptions) => Promise<any>\n  writeJSON: (file: string, object: any, options?: WriteOptions) => Promise<void>\n  stat: (path: string | Buffer) => Promise<Stats>\n  readdir: (path: string | Buffer) => Promise<string[]>\n}\n\nexport interface Logger {\n  trace(message): void\n  debug(message): void\n  info(message): void\n  warn(message): void\n  error(message): void\n  fatal(message): void\n}\n\nexport interface EffectOptions {\n  fs?: FileSystem\n  prompter?: Prompter\n  logger?: Logger\n}\n\nexport class Effect {\n  public static fs: FileSystem = fse\n\n  public static prompter: Prompter = inquirerPrompter\n\n  public static logger: Logger = logger\n\n  public static replace(options: EffectOptions = {}): void {\n    if (options.fs) this.fs = options.fs\n    if (options.prompter) this.prompter = options.prompter\n    if (options.logger) this.logger = options.logger\n  }\n}\n","import { Resource, Effect } from '@/internal'\nimport { Encoding } from '@/consts'\nimport { diffFile } from '@/utils'\nimport { isNil } from 'ramda'\n\n\nexport interface CheckOptions {\n  showDiff?: boolean\n  fold?: boolean\n}\n\nexport class CompiledFile {\n  public templatePath: string\n\n  public encoding: Encoding\n\n  public projectPath: string\n\n  private projectContent?: string\n\n  public projectFileExisted: boolean\n\n  public content: string\n\n  public resource: Resource\n\n  /** Delete project file */\n  public deleted: boolean = false\n\n  /** Need to render file */\n  public renderable: boolean = true\n\n  /** Additional file information that added by handler */\n  public addition = {}\n\n  constructor(\n    templatePath: string,\n    content: string,\n    encoding: Encoding,\n    projectPath: string,\n    resource: Resource,\n    projectFileExisted: boolean,\n  ) {\n    this.templatePath = templatePath\n    this.projectPath = projectPath\n    this.projectFileExisted = projectFileExisted\n\n    this.encoding = encoding\n    this.content = content\n\n    this.resource = resource\n  }\n\n  public async getProjectContent(): Promise<string> {\n    const { projectPath, encoding } = this\n\n    if (!isNil(this.projectContent)) return this.projectContent\n    if (!this.projectFileExisted) throw new Error(`Cannot get content from an unexisted file ${projectPath}.`)\n\n    this.projectContent = await Effect.fs.readFile(projectPath, encoding)\n    return this.projectContent\n  }\n\n  public async render(): Promise<void> {\n    if (this.deleted) {\n      await Effect.fs.remove(this.projectPath)\n      return\n    }\n    if (!this.renderable) return\n\n    const { projectPath, content, encoding } = this\n    await Effect.fs.writeFile(projectPath, content, encoding)\n  }\n\n  public async check(options: CheckOptions = {}): Promise<boolean> {\n    const { projectPath, deleted, renderable, projectFileExisted } = this\n    if (deleted && projectFileExisted) throw new Error(`${projectPath}: Should be removed`)\n    if (!renderable) return true\n    if (!projectFileExisted) throw new Error(`${projectPath}: Not exist`)\n\n    const projectContent = await this.getProjectContent()\n    if (this.content === projectContent) return true\n\n    if (options.showDiff) {\n      const diff = diffFile(this.projectPath, projectContent, this.content, { fold: options.fold })\n      throw new Error(diff)\n    } else {\n      throw new Error(`${projectPath}: Not match template.`)\n    }\n  }\n}\n\nexport type CompiledFiles = CompiledFile[]\n","\nexport enum Encoding {\n  UTF8 = 'utf8',\n  Binary = 'binary',\n  Hex = 'hex',\n  ASCII = 'ascii',\n}\n\nexport type InferEncodingFunc = (path: string) => Encoding\n","\nexport enum UpgradeType {\n  Cover = 'cover',\n  Keep = 'keep',\n  Exist = 'exist',\n  Merge = 'merge',\n}\n","import { join } from 'path'\n\nexport type Path = Readonly<string>\nexport const TEMPLATE_STORAGE: Path = join(__dirname, '../templates')\n","import { extname } from 'path'\nimport { Encoding, InferEncodingFunc } from '@/consts'\n\n\nconst binaryFileExtensitions = ['.jpeg', '.jpg', '.png', '.ico']\nconst inferFileEncoding: InferEncodingFunc = path => {\n  if (binaryFileExtensitions.includes(extname(path))) return Encoding.Binary\n\n  return Encoding.UTF8\n}\n\nexport default inferFileEncoding\n","import { Encoding, InferEncodingFunc } from '@/consts'\nimport inferEncodingNormally from './infer-encoding-normally'\n\ntype EncodingMapping = Partial<Record<Encoding, string | ((path: string) => boolean)>>\n\nexport default function(mapping: EncodingMapping): InferEncodingFunc {\n  const encodingRegExpMap = Object.entries(mapping)\n    .map(([key, value]) => {\n      if (typeof value === 'string') {\n        const pattern = new RegExp(value)\n        return { encoding: key as Encoding, match: v => pattern.test(v) }\n      } else if (typeof value === 'function') {\n        return { encoding: key as Encoding, match: v => value(v) }\n      }\n\n      throw new Error('Encoding mapping should be function or regexp')\n    })\n\n  return path => {\n    const item = encodingRegExpMap.find(item => item.match(path))\n    if (item && Object.values(Encoding).includes(item.encoding)) return item.encoding\n    else return inferEncodingNormally(path)\n  }\n}\n","import { Encoding, InferEncodingFunc } from '@/consts'\n\nexport default function(encoding: Encoding): InferEncodingFunc {\n  const inferEncoding: InferEncodingFunc = () => encoding\n  return inferEncoding\n}\n","import { relative, join } from 'path'\nimport { Handler, Resource, CompiledFile, Effect } from '@/internal'\nimport { InferEncodingFunc } from '@/consts'\nimport { inferEncodingNormally } from '@/infer-encoding'\n\n\nexport class File {\n  public templatePath: string\n\n  public inferEncoding: InferEncodingFunc\n\n  public handler?: Handler\n\n  constructor(path: string, inferEncoding: InferEncodingFunc = inferEncodingNormally, handler?: Handler) {\n    this.templatePath = path\n    this.inferEncoding = inferEncoding\n    this.handler = handler\n  }\n\n  public async compile(resource: Resource): Promise<CompiledFile> {\n    await this.readTemplateFile()\n    const { templatePath } = this\n\n    let projectPath = templatePath\n    projectPath = relative(resource.template.path, this.templatePath)\n    projectPath = join(resource.project.path, projectPath)\n\n    if (this.handler) {\n      projectPath = await this.handler.genPath(projectPath, resource)\n    }\n\n    const content = await this.readTemplateFile()\n    const encoding = this.inferEncoding(this.templatePath)\n\n    const projectFileExisted = await Effect.fs.pathExists(projectPath)\n\n    const compiledFile = new CompiledFile(templatePath, content, encoding, projectPath, resource, projectFileExisted)\n\n    if (this.handler) await this.handler.genFile(compiledFile, resource)\n\n    return compiledFile\n  }\n\n  private async readTemplateFile(): Promise<string> {\n    const { templatePath, inferEncoding } = this\n    const encoding = inferEncoding(templatePath)\n    return await Effect.fs.readFile(templatePath, encoding)\n  }\n}\n\nexport type Files = File[]\n","import { join, isAbsolute } from 'path'\nimport validateNpmPackageName from 'validate-npm-package-name'\nimport { isRelativePath, installDeps, logger } from '@/utils'\nimport { Template, GitRepository, NpmRepository, LocalRepository, Effect } from '@/internal'\nimport semver from 'semver'\n\n\nexport type RepositoryTypes = 'npm' | 'local' | 'git'\nexport interface InstallOptions {\n  noDeps?: boolean\n}\n\nexport abstract class Repository {\n  public type!: RepositoryTypes\n\n  public owner: string = ''\n\n  public name: string = ''\n\n  protected versions: string[] | null = null\n\n  public version?: string\n\n  public static async format(str: string): Promise<Repository> {\n    const githubSH = /^(github:)[-a-zA-Z0-9@:%._+~#=]+\\/[-a-zA-Z0-9@:%._+~#=]+$/\n    const gitUrlRegexp = /((git|ssh|http(s)?)|(git@[\\w.]+))(:(\\/\\/)?)([\\w.@:/\\-~]+)(\\.git)(\\/)?$/\n    let repo: Repository\n\n    if (isRelativePath(str) || isAbsolute(str)) {\n      const localRepo = new LocalRepository(str)\n      if (!await localRepo.existed()) {\n        throw new Error(`Template path cannot be found. Ensure it is an exist directory: ${localRepo.path}.`)\n      }\n      repo = localRepo\n    } else if (gitUrlRegexp.test(str)) {\n      repo = new GitRepository(str)\n    } else if (/^npm:/.test(str) && validateNpmPackageName(str.substring('npm:'.length))) {\n      repo = new NpmRepository(str.substring('npm:'.length))\n    } else if (githubSH.test(str)) {\n      repo = new GitRepository(`https://github.com/${str.replace(/^github:/, '')}.git`)\n    } else {\n      throw new Error(`Invalid repository url: ${str}`)\n    }\n\n    if (!await repo.isVerioning()) logger.warn('The template repository is not versioned.')\n\n    await repo.checkout('latest')\n\n    return repo\n  }\n\n  public async hasVersion(version: string): Promise<boolean> {\n    const versions = await this.getVersions()\n    return versions.includes(version)\n  }\n\n\n  public async checkout(version: string = 'latest'): Promise<void> {\n    if (version !== 'latest' && version !== 'default' && !semver.valid(version)) {\n      throw new Error('Semantic version expected.')\n    }\n\n    const versions = await this.getVersions()\n\n    if (version === 'default') {\n      this.version = 'default'\n    } else if (version === 'latest') {\n      if (versions.length) this.version = versions[0]\n      else this.version = undefined\n    } else if (versions.includes(version)) {\n      this.version = version\n    } else {\n      throw new Error(`Cannot find template for the version ${version} `)\n    }\n  }\n\n  public async isVerioning(): Promise<boolean> {\n    const versions = await this.getVersions()\n    if (versions.length) return true\n    return false\n  }\n\n  public async isLatest(): Promise<boolean> {\n    const versions = await this.getVersions()\n    if (versions.length && this.version === versions[0]) return true\n    return false\n  }\n\n  private async installDeps(): Promise<void> {\n    const { storage } = this\n\n    const npmConfigFile = join(storage, 'package.json')\n    const npmConfigFileExist = await Effect.fs.pathExists(npmConfigFile)\n    if (npmConfigFileExist) await installDeps(storage)\n  }\n\n\n  public async install(options: InstallOptions = {}): Promise<Template> {\n    const { version } = this\n    if (version && !this.hasVersion(version)) {\n      throw new Error(`The template version ${version} is not existed.`)\n    }\n\n    await this.download()\n    if (!options.noDeps) await this.installDeps()\n    return Template.load(this)\n  }\n\n  abstract get storage(): string\n\n  abstract get record(): string | ((projectPath: string) => string)\n\n  public abstract existed(): Promise<boolean>\n\n  /**\n   * get repository versions list.\n   * In the order from new to old.\n   */\n  public abstract getVersions(): Promise<string[]>\n\n  public abstract download(): Promise<void>\n}\n","import semver from 'semver'\nimport git from 'simple-git/promise'\nimport { Repository } from './repository'\nimport { Effect } from '@/internal'\nimport { logger } from '@/utils'\nimport { TEMPLATE_STORAGE } from '@/consts'\nimport { join } from 'path'\n\n\nconst gitUrlRegexp = /((git|ssh|http(s)?)|(git@[\\w.]+))(:(\\/\\/)?)([\\w.@:/\\-~]+)(\\.git)(\\/)?$/\n\nexport class GitRepository extends Repository {\n  public url: string\n\n  constructor(url) {\n    super()\n    this.type = 'git'\n\n    this.url = url\n\n    const matched = url.match(gitUrlRegexp)\n    const [, , , , , , , links] = matched\n    const [owner, name] = links.split('/').slice(-2)\n    this.owner = owner\n    this.name = name\n  }\n\n  get record(): string {\n    return this.url\n  }\n\n  get storage(): string {\n    const { url, version } = this\n    return join(TEMPLATE_STORAGE, encodeURIComponent(url), version || 'noversion')\n  }\n\n  public async getVersions(): Promise<string[]> {\n    if (this.versions) return this.versions\n\n    const result = await git().listRemote(['--tags', this.url])\n    const arr = result.split('\\n')\n    const versions = arr\n      .filter(item => item.length && !/\\^{}$/.test(item))\n      .map(item => {\n        const [, ref] = item.split(/\\s+/)\n        const number = ref.substring('refs/tags/v'.length)\n        return number\n      })\n      .filter(version => semver.valid(version))\n      .sort((v1, v2) => semver.rcompare(v1, v2))\n\n    if (!versions.length) {\n      logger.warn([\n        'Cannot get template versions, May be caused by the following reasons:',\n        `1. repository is not a mili template(${this.url})`,\n        '2. template have not a valid tag to mark the version(e.g. v1.0.0)',\n        `3. cannot get versions by command: \\`git ls-remote --tags ${this.url}}\\``,\n      ].join('\\n'))\n    }\n\n    this.versions = versions\n    return versions\n  }\n\n  public async download(): Promise<void> {\n    const { url, version, storage } = this\n\n    if (!version || version === 'default') {\n      if (!version) logger.warn('Version is unset, use the default branch files of git repository')\n\n      await Effect.fs.remove(storage)\n      await git().clone(url, storage)\n      return\n    }\n\n    const repositoryExisted = await Effect.fs.pathExists(storage)\n\n    if (!repositoryExisted) {\n      logger.info(`clone template from ${url}...`)\n      await git().clone(url, storage, ['--branch', `v${version}`, '--single-branch'])\n      logger.info(`template version: ${version}`)\n    } else {\n      logger.info('use the cache of template')\n    }\n  }\n\n  public async existed(): Promise<boolean> {\n    try {\n      const result = await git().listRemote([])\n      return Boolean(result && result.length)\n    } catch (e) {\n      return false\n    }\n  }\n}\n","import git from 'simple-git/promise'\nimport semver from 'semver'\nimport { relative, join, isAbsolute, basename } from 'path'\nimport { Repository } from './repository'\nimport { TEMPLATE_STORAGE } from '@/consts'\nimport { logger, dirExist, isRootDirOfRepo, isRelativePath } from '@/utils'\nimport { Effect } from '@/internal'\n\n\nexport class LocalRepository extends Repository {\n  public absolute: boolean = false\n\n  public path: string\n\n  constructor(str) {\n    super()\n    this.type = 'local'\n    this.name = basename(str)\n\n    const path = str\n    const cwd = process.cwd()\n\n    if (isAbsolute(path)) {\n      this.absolute = true\n      this.path = path\n    } else {\n      this.path = join(cwd, path)\n    }\n  }\n\n  get record(): string | ((projectPath: string) => string) {\n    if (this.absolute) return this.path\n    /** the path saved in .milirc should be relative to the output folder, rather than process.cwd() */\n    return projectPath => {\n      const relativePath = relative(projectPath, this.path)\n\n      if (isRelativePath(relativePath)) return relativePath\n      else return `./${relativePath}`\n    }\n  }\n\n  get storage(): string {\n    return join(TEMPLATE_STORAGE, encodeURIComponent(this.path), this.version || 'noversion')\n  }\n\n  public async getVersions(): Promise<string[]> {\n    const { path } = this\n    if (this.versions) return this.versions\n    if (!(await git(path).checkIsRepo()) || !await isRootDirOfRepo(path)) {\n      this.versions = []\n      return this.versions\n    }\n\n    const tags = await git(path).tags()\n\n    if (!tags.all.length) {\n      logger.warn([\n        'Cannot get template versions, May be caused by the following reasons:',\n        `1. repository is not a mili template(${path})`,\n        '2. template have not a valid tag to mark the version(e.g. v1.0.0)',\n        `3. cannot get versions by command: \\`git tags ${path}\\``,\n      ].join('\\n'))\n    }\n\n    this.versions = tags.all\n      .map(tag => semver.clean(tag) || '')\n      .filter(tag => Boolean(tag))\n      .reverse()\n\n    return this.versions\n  }\n\n  public async download(): Promise<void> {\n    const { path, version, storage } = this\n\n    await Effect.fs.emptyDir(storage)\n    logger.info(`copy template from ${path}`)\n    await Effect.fs.copy(path, storage)\n\n    if (isRootDirOfRepo(storage) && version && version !== 'default') {\n      await git(storage).reset('hard')\n      await git(storage).checkout(`v${version}`)\n\n      logger.info(`template version: ${version}`)\n    } else if (version !== 'default') {\n      logger.warn('Version is unset, use the default files')\n    }\n  }\n\n  public async existed(): Promise<boolean> {\n    return await dirExist(this.path)\n  }\n}\n","import childProcess from 'child_process'\nimport { promisify } from 'util'\nimport { join } from 'path'\nimport { Repository } from './repository'\nimport { logger } from '@/utils'\nimport { TEMPLATE_STORAGE } from '@/consts'\nimport { Effect } from '@/internal'\n\n\nconst genIndexFile = (name: string): string => `\nconst { join } = require('path')\nconst config = require('${name}')\nconst path = join('./node_modules/${name}', config.path)\n\nmodule.exports = { ...config, path }\n`\n\nconst exec = promisify(childProcess.exec)\nexport class NpmRepository extends Repository {\n  public scope: string | null\n\n  constructor(name) {\n    super()\n\n    this.type = 'npm'\n    this.name = name\n\n    const matched = name.match(/@(.*)\\//)\n    if (matched) this.scope = matched[1]\n    else this.scope = null\n  }\n\n  get record(): string {\n    return `npm:${this.name}`\n  }\n\n  get storage(): string {\n    return join(TEMPLATE_STORAGE, encodeURIComponent(this.name), this.version || 'noversion')\n  }\n\n  public async getVersions(): Promise<string[]> {\n    if (this.versions) return this.versions\n\n    const { stdout, stderr } = await exec(`npm view ${this.name} versions  --json`)\n    if (stderr) console.error(stderr)\n    return JSON.parse(stdout).reverse()\n  }\n\n  public async download(): Promise<void> {\n    const { name, version, storage } = this\n    if (version === 'default' || !version) throw new Error('Please checkout version before install npm template')\n\n    const repositoryExisted = await Effect.fs.pathExists(storage)\n    if (repositoryExisted) {\n      logger.info('use the cache of template')\n      return\n    }\n\n    logger.info(`install ${name} template from npm...`)\n    await Effect.fs.emptyDir(storage)\n    await Effect.fs.writeJSON(join(storage, 'package.json'), {\n      main: 'index.js',\n      description: '',\n      license: 'MIT',\n    })\n    await Effect.fs.writeFile(join(storage, 'index.js'), genIndexFile(name))\n    await Effect.fs.writeFile(join(storage, '.npmrc'), 'package-lock=false')\n\n    const command = `npm install ${name}@${version}`\n    await exec(command, { cwd: storage })\n  }\n\n  public async existed(): Promise<boolean> {\n    const out = await exec(`npm view ${this.name} --json`)\n    return !out.stderr\n  }\n}\n","import EventEmitter from 'events'\nimport { mergeDeepLeft, pick, prop } from 'ramda'\nimport { join } from 'path'\nimport { CheckOptions, Resource, Effect } from '@/internal'\nimport yaml from 'js-yaml'\nimport { logger } from '@/utils'\nimport { Template } from './template'\nimport { Project } from './project'\n\n\nexport interface RenderOptions {\n  /**\n   * always prompt the question,\n   * even though it was answered.\n   */\n  ignoreAnswered?: boolean\n}\n\n\nexport class Compiler {\n  public readonly resource: Resource\n\n  private readonly eventEmitter: EventEmitter = new EventEmitter()\n\n  constructor(resource: Resource) {\n    this.resource = resource\n\n    this.template.hooks.map(hook => hook.appendTo(this.eventEmitter))\n  }\n\n  get template(): Template {\n    return this.resource.template\n  }\n\n  get project(): Project {\n    return this.resource.project\n  }\n\n  public emit(name: string): void {\n    this.eventEmitter.emit(name)\n  }\n\n  private async prompt(force = false): Promise<void> {\n    const { template, project } = this\n    let { questions } = template\n    const namesOfQuestions = questions.map(prop('name'))\n\n    if (project.answers && !force) {\n      const answers = project.answers\n      questions = questions.filter(question => !question.answered(answers))\n    }\n\n    if (!questions.length) return\n    logger.info('Please answer the questions of template.')\n\n    let answers = await Effect.prompter(questions)\n    if (project.answers) answers = mergeDeepLeft(answers, project.answers)\n\n    project.answers = pick(namesOfQuestions, answers)\n  }\n\n  public async render(options: RenderOptions = {}): Promise<void> {\n    await this.prompt(options.ignoreAnswered)\n\n    await this.template.render(this.resource)\n    await this.generateMilirc()\n\n    this.emit('rendered')\n  }\n\n  public async check(options: CheckOptions): Promise<void> {\n    await this.template.check(this.resource, options)\n  }\n\n  private async generateMilirc(): Promise<void> {\n    const milirc = yaml.safeDump(this.resource.milirc, { skipInvalid: true })\n    await Effect.fs.writeFile(join(this.project.path, '.milirc.yml'), milirc, 'utf8')\n  }\n}\n","import { CompiledFile, Resource } from '@/internal'\nimport { buildInHandlers } from '@/internal'\n\nexport interface FileGenerator {\n  (file: CompiledFile, resource: Readonly<Resource>): Promise<void>\n}\nexport interface PathGenerator {\n  (path: string, resource: Readonly<Resource>): Promise<string>\n}\n\nconst identity: PathGenerator = async path => path\n\ninterface HandlerDuck {\n  genFile: FileGenerator\n  genPath: PathGenerator\n}\n\nexport class Handler {\n  public genFile: FileGenerator\n\n  public genPath: PathGenerator\n\n  constructor(genFile: FileGenerator, genPath: PathGenerator = identity) {\n    this.genFile = genFile\n    this.genPath = genPath\n  }\n\n  public static compose(handlers: Handler[]): Handler {\n    const genFile: FileGenerator = async(file, config) => {\n      for (const handler of handlers) {\n        await handler.genFile(file, config)\n      }\n    }\n\n    const genPath: PathGenerator = async(string, config) => {\n      let str = string\n      for (const handler of handlers) {\n        str = await handler.genPath(str, config)\n      }\n\n      return str\n    }\n\n    return new Handler(genFile, genPath)\n  }\n\n  public static find(name: string): Handler | null {\n    if (name in buildInHandlers) return buildInHandlers[name]\n    return null\n  }\n\n  public static format(handler: string | HandlerDuck | ((buildIn) => Handler)): Handler {\n    if (typeof handler === 'string') {\n      const h = Handler.find(handler)\n      if (h) return h\n      else throw new Error(`Cannot find ${handler} handler `)\n    } else if (typeof handler === 'function') {\n      const h = handler(buildInHandlers)\n      if (h instanceof Handler) return h\n    } else if (typeof handler === 'object') {\n      return new Handler(handler.genFile, handler.genPath)\n    }\n\n    throw new TypeError('Cannot format handler')\n  }\n}\n\nexport type Handlers = Handler[]\n","import childProcess from 'child_process'\nimport { promisify } from 'util'\nimport { logger } from '@/utils'\nimport { EventEmitter } from 'events'\n\n\nconst exec = promisify(childProcess.exec)\n\nexport type Listener = (...arg: any[]) => void\n\nexport class Hook {\n  public eventName: string\n\n  public listener: Listener\n\n  /*\n   * constructor(eventName: string, listener: string)\n   * constructor(eventName: string, listener: Listener)\n   */\n  constructor(eventName: string, listener: Listener | string) {\n    this.eventName = eventName\n\n    if (typeof listener === 'string') {\n      this.listener = async() => {\n        logger.info(`run ${eventName} hook...`)\n\n        try {\n          const { stdout, stderr } = await exec(listener)\n\n          process.stdout.write(stdout)\n          process.stderr.write(stderr)\n        } catch (error) {\n          logger.error('hook exec error', error)\n        }\n      }\n    } else if (typeof listener === 'function') {\n      this.listener = async(...arg) => {\n        logger.info(`run ${eventName} hook...`)\n        await listener(...arg)\n      }\n    } else {\n      throw new Error('Hook should be a string or function')\n    }\n  }\n\n  public appendTo(eventEmitter: EventEmitter): void {\n    eventEmitter.addListener(this.eventName, this.listener)\n  }\n}\n\nexport type Hooks = Hook[]\n","import Template from './template.json'\nexport const TemplateSchema = Template\n\nimport Rule from './rule.json'\nexport const RuleSchema = Rule\n\nimport Handler from './hander.json'\nexport const HandlerSchema = Handler\n\nimport Question from './question.json'\nexport const QuestionSchema = Question\n\nimport Milirc from './milirc.json'\nexport const MilircSchema = Milirc\n","import cosmiconfig from 'cosmiconfig'\nimport semver from 'semver'\nimport { join } from 'path'\nimport Ajv from 'ajv'\nimport { relativePath, isRelativePath } from '@/utils'\nimport { MilircSchema } from '@/schema'\nimport { Milirc, Effect } from '@/internal'\nimport { clone } from 'ramda'\n\n\nconst ajv = new Ajv({ useDefaults: true, nullable: true })\nconst validate = ajv.compile(MilircSchema)\n\nconst explorer = cosmiconfig('mili')\n\nexport default async(cwd: string): Promise<Milirc | null> => {\n  const filepath = join(cwd, '.milirc.yml')\n  if (!await Effect.fs.pathExists(filepath)) return null\n\n  /**\n   * NOTE: don't change the object that return by cosmiconfig.\n   *       It was cache by cosmiconfig\n   */\n  const result = await explorer.load(filepath)\n  if (!result || !result.config) return null\n\n  const config = clone(result.config)\n  if (!config) throw new Error('Cannot load .milirc.yml')\n\n  /* Should before validate. mili@1 config won't pass validator */\n  if (config.mili && semver.lt(config.mili.version, '2.0.0')) throw new Error('Never support auto upgrade from mili@1')\n\n  const valid = validate(config)\n  if (!valid) throw new Error(ajv.errorsText(validate.errors, { dataVar: 'milirc' }))\n  const milirc: Milirc = config as Milirc\n\n\n  /** The relative template path saved in .milirc is relative to the dir of .milirc */\n  if (isRelativePath(config.template.repository)) {\n    config.template.repository = relativePath(process.cwd(), join(cwd, config.template.repository))\n  }\n\n  return milirc\n}\n","import { join } from 'path'\nimport { MissingFileError, Effect } from '@/internal'\nimport { validateGitRepoUrl } from '@/utils'\n\n\ninterface NpmConfig {\n  main?: string\n  name?: string\n  repository?: {\n    type?: 'git'\n    url?: string\n  }\n}\n\n\nexport default async(path: string): Promise<NpmConfig> => {\n  const packageJsonPath = join(path, 'package.json')\n  const exist = await Effect.fs.pathExists(packageJsonPath)\n\n  if (!exist) throw new MissingFileError(path)\n\n  try {\n    const config: NpmConfig = await Effect.fs.readJSON(packageJsonPath)\n\n    if (typeof config.repository === 'string') {\n      if (validateGitRepoUrl(config.repository)) {\n        config.repository = { type: 'git', url: config.repository }\n      } else {\n        config.repository = { url: config.repository }\n      }\n    } if (typeof config.repository === 'object') {\n      if (config.repository.type === 'git' && config.repository.url) {\n        const url = config.repository.url.replace(/^git\\+/, '')\n        config.repository = { type: 'git', url }\n      } else {\n        config.repository = { url: config.repository.url }\n      }\n    } else {\n      config.repository = undefined\n    }\n\n    if (typeof config.main !== 'string') config.main = undefined\n\n    return config\n  } catch (e) {\n    throw new Error([\n      `Cannot load package.json from ${path}.`,\n      'Maybe syntax error in package.json',\n    ].join('\\n'))\n  }\n}\n","import git from 'simple-git/promise'\nimport { basename } from 'path'\nimport { loadMilirc, loadNpmConfig } from '@/loader'\nimport { Answers } from './question'\nimport { Repository, GitRepository, MissingFileError } from '@/internal'\nimport { hasPath } from 'ramda'\nimport { isRootDirOfRepo } from '@/utils'\nimport { Maybe } from '@/types'\n\n\nexport class Project {\n  public path: string\n\n  public repository?: Repository\n\n  public name: string | undefined\n\n  public answers?: Answers\n\n  constructor(path: string, name: string = '', repository?: Repository, answers?: Answers) {\n    this.path = path\n    this.name = name\n    this.repository = repository\n    this.answers = answers\n  }\n\n  public async getTemplateRepo(): Promise<Repository> {\n    const milirc = await loadMilirc(this.path)\n\n    if (!milirc) throw new Error('Cannot load milirc')\n    if (!hasPath(['template', 'repository'], milirc)) {\n      throw new Error('Cannot find repository config in .milirc')\n    }\n\n    const version = milirc.template.version\n    const repoStr = milirc.template.repository\n\n    const repo = await Repository.format(repoStr)\n    if (version) await repo.checkout(version)\n\n    return repo\n  }\n\n  public static async load(path: string): Promise<Project> {\n    const milirc = await loadMilirc(path)\n    let repo: Maybe<Repository>\n    let answers: Maybe<Answers>\n\n    if (await isRootDirOfRepo(path)) {\n      const remotes = await git(path).getRemotes(true)\n      if (remotes && remotes.length) repo = new GitRepository(remotes[0].refs.push)\n    }\n\n    if (milirc && milirc.answers) answers = milirc.answers\n\n    try {\n      const npmConfig = await loadNpmConfig(path)\n      if (npmConfig.repository && npmConfig.repository.type === 'git') {\n        repo = new GitRepository(npmConfig.repository.url)\n      }\n\n      return new Project(path, npmConfig.name, repo, answers)\n    } catch (error) {\n      if (error instanceof MissingFileError) {\n        return new Project(path, basename(path), repo, answers)\n      } else {\n        throw error\n      }\n    }\n  }\n}\n","import { identity, T } from 'ramda'\ntype QuesstionTypes = 'input' | 'confirm' | 'number' | 'list' | 'rawlist' | 'expand' | 'checkbox' | 'password' | 'editor'\ntype Validator = (input: string) => boolean | string\ntype Choice = string | number | boolean | DetailedChoice\ntype Choices = ((answers: Answers) => Choice[]) | Choice[]\ntype Filter = <T>(value: T) => T\ntype When = (answers: Answers) => boolean\n\ninterface DetailedChoice {\n  name: string\n  value: string | number | boolean\n  checked?: boolean\n  disabled?: boolean\n}\n\nexport interface QuestionOptions {\n  type?: QuesstionTypes\n  name: string\n  message?: string | Function\n  default?: any\n  choices?: Choices\n  validate?: Validator\n  filter?: Filter\n  transformer?: Function\n  when?: When\n  pageSize?: number\n  prefix?: string\n  suffix?: string\n}\n\nexport class Question {\n  public type: QuesstionTypes = 'input'\n\n  public name: string = ''\n\n  public message: string | Function = ''\n\n  public default: any\n\n  public choices: Choices = []\n\n  public validate: Validator = T\n\n  public filter: Filter = identity\n\n  public transformer: Function = identity\n\n  public when: When = T\n\n  public pageSize: number = 0\n\n  public prefix: string = ''\n\n  public suffix: string = ''\n\n  constructor(options: QuestionOptions) {\n    if (options.type) this.type = options.type\n    if (options.name) this.name = options.name\n    else throw new TypeError('name should not be empty')\n    if (options.message) this.message = options.message\n    if (options.default) this.default = options.default\n    if (options.choices) this.choices = options.choices\n    if (options.validate) this.validate = options.validate\n    if (options.filter) this.filter = options.filter\n    if (options.transformer) this.transformer = options.transformer\n    if (options.when) this.when = options.when\n    if (options.pageSize) this.pageSize = options.pageSize\n    if (options.prefix) this.prefix = options.prefix\n    if (options.suffix) this.suffix = options.suffix\n  }\n\n  private includesByChoices(value, answers: Answers): boolean {\n    let choices = this.choices\n    if (typeof choices === 'function') choices = choices(answers)\n\n    return choices\n      .filter(choice => typeof choice !== 'object' || !choice.disabled)\n      .some(choice => {\n        if (typeof choice === 'object') return choice.value === value\n        return choice === value\n      })\n  }\n\n  public answered(answers: Answers): boolean {\n    const { name, type } = this\n    if (!Object.keys(answers).includes(name)) return false\n\n    const answer = answers[name]\n\n    if (type === 'input' || type === 'password') return typeof answer === 'string'\n    if (type === 'number') return typeof answer === 'number'\n    if (type === 'confirm') return typeof answer === 'boolean'\n    if (type === 'list' || type === 'rawlist' || type === 'expand') return this.includesByChoices(answer, answers)\n    if (type === 'checkbox' && Array.isArray(answer)) return answer.every(value => this.includesByChoices(value, answers))\n\n    return false\n  }\n}\n\nexport type Questions = Question[]\n\nexport interface Answers {\n  [name: string]: string | number | boolean | (string | number)[]\n}\n\nexport type Prompter = (question: Question[]) => Promise<Answers>\n\n","import semver from 'semver'\nimport { Compiler } from '@/internal'\nimport { version } from '../../package.json'\nimport { Project } from './project'\nimport { Template } from './template'\nimport { logger } from '@/utils'\nimport { Maybe } from '@/types.js'\nimport { Answers } from './question.js'\n\n\nexport interface Milirc {\n  mili: {\n    version: string\n  }\n\n  template: {\n    repository: string\n    version?: string\n  }\n\n  answers?: Answers\n}\n\nexport type MiliOperations = 'init' | 'upgrade' | 'update' | 'check'\nexport class Resource {\n  public readonly mili = { version }\n\n  public readonly project: Project\n\n  public readonly template: Template\n\n  public readonly operation: MiliOperations\n\n  constructor(operation: MiliOperations, project: Project, template: Template) {\n    if (!template.engines) {\n      logger.warn('The template.engines is not set, you need to check the mili version manually.')\n    } else if (!semver.satisfies(this.mili.version, template.engines)) {\n      throw new Error([\n        `The mili version template need is ${template.engines}`,\n        `But mili version used is ${this.mili.version}`,\n      ].join('\\n'))\n    }\n\n    this.operation = operation\n    this.project = project\n    this.template = template\n  }\n\n  get answers(): Maybe<Answers> {\n    return this.project.answers\n  }\n\n  get milirc(): Milirc {\n    const { mili, project, template, answers } = this\n    let { record } = template.repository\n    if (typeof record === 'function') record = record(project.path)\n\n    return {\n      mili,\n      template: {\n        repository: record,\n        version: template.repository.version,\n      },\n      answers,\n    }\n  }\n\n  public async compile(): Promise<Compiler> {\n    return new Compiler(this)\n  }\n}\n","import Ajv from 'ajv'\nimport glob from 'micromatch'\nimport { UpgradeType, Encoding, InferEncodingFunc } from '@/consts'\nimport { RuleSchema, HandlerSchema } from '@/schema'\nimport { inferEncodingByMapping, inferEncodingImmobile, inferEncodingNormally } from '@/infer-encoding'\nimport { Handler, Handlers, File, buildInHandlers, Maybe } from '@/internal'\nimport { isAbsolute } from 'path'\n\n\nconst ajv = new Ajv({ useDefaults: true })\nconst validate = ajv\n  .addSchema([HandlerSchema])\n  .compile(RuleSchema)\n\nexport class Rule {\n  public readonly path: string\n\n  public readonly upgrade: UpgradeType\n\n  public readonly glob: boolean\n\n  public readonly handler?: Handler\n\n  public readonly inferEncoding: InferEncodingFunc\n\n  constructor(\n    path: string,\n    upgrade: UpgradeType = UpgradeType.Cover,\n    glob: boolean = true,\n    inferEncoding: InferEncodingFunc = inferEncodingNormally,\n    handler?: Handler,\n  ) {\n    this.path = path\n    this.inferEncoding = inferEncoding\n    this.upgrade = upgrade\n    this.glob = glob\n    this.handler = handler\n  }\n\n  public static format(obj): Rule {\n    const valid = validate(obj)\n\n    if (!valid) {\n      throw new TypeError([\n        'Incorrect rules field configuration for template configuration',\n        ajv.errorsText(validate.errors, { dataVar: 'rule' }),\n      ].join('\\n'))\n    }\n\n    if (!isAbsolute(obj.path)) throw new TypeError(`The path of rule should be absolute path. But get ${obj.path}`)\n\n    const path = obj.path\n    const upgrade = obj.upgrade\n    const glob = obj.glob\n    let inferEncoding: InferEncodingFunc = inferEncodingNormally\n    if ('encoding' in obj) {\n      if (typeof obj.encoding === 'object') {\n        inferEncoding = inferEncodingByMapping(obj.encoding)\n      } else if (Object.values(Encoding).includes(obj.encoding)) {\n        inferEncoding = inferEncodingImmobile(obj.encoding)\n      }\n    }\n    let handler\n\n    if (obj.handlers) {\n      const handlers = obj.handlers.map(Handler.format)\n      handler = Handler.compose(handlers)\n    } else if (obj.handler) {\n      handler = Handler.format(obj.handler)\n    }\n\n    return new Rule(path, upgrade, glob, inferEncoding, handler)\n  }\n\n  public match(path: string): boolean {\n    if (this.glob) return glob.isMatch(path, this.path)\n    return this.path === path\n  }\n\n  public static merge(parent: Rule, child: Rule): Rule {\n    const path = child.path\n    const upgrade = child.upgrade\n    const glob = child.glob\n    const handlers: Handlers = []\n    let handler: Maybe<Handler>\n\n    if (parent.handler) handlers.push(parent.handler)\n    if (child.handler) handlers.push(child.handler)\n\n    if (handlers.length) handler = Handler.compose(handlers)\n    const inferEncoding = child.inferEncoding || parent.inferEncoding\n\n    return new Rule(path, upgrade, glob, inferEncoding, handler)\n  }\n\n  public createFile(path: string): File {\n    const paths = path.split('/')\n      .map((pair, i, arr) => arr.slice(0, arr.length - i).join('/'))\n      .filter(item => Boolean(item))\n\n    if (!paths.some(item => this.match(item))) {\n      throw new Error([\n        'Cannot create file from rule',\n        'Because the file path is not match rule',\n      ].join('\\n'))\n    }\n\n    const { inferEncoding, upgrade } = this\n    let handler: Maybe<Handler> = this.handler\n    let upgradeHandler: Maybe<Handler>\n\n    if (upgrade === 'merge') upgradeHandler = buildInHandlers.merge\n    if (upgrade === 'exist') upgradeHandler = buildInHandlers.exist\n    if (upgrade === 'keep') upgradeHandler = buildInHandlers.ignoreWhen(({ operation }) => operation !== 'init')\n\n    if (handler && upgradeHandler) handler = Handler.compose([handler, upgradeHandler])\n    else if (!handler && upgradeHandler) handler = upgradeHandler\n\n\n    return new File(path, inferEncoding, handler)\n  }\n}\n","import Ajv from 'ajv'\nimport ajvKeywords from 'ajv-keywords'\nimport { join, dirname } from 'path'\nimport cosmiconfig from 'cosmiconfig'\nimport { unnest, clone } from 'ramda'\nimport { loadNpmConfig } from '@/loader'\nimport { TemplateSchema, RuleSchema, QuestionSchema, HandlerSchema } from '@/schema'\nimport { isDirectory, logger } from '@/utils'\nimport { UpgradeType } from '@/consts'\nimport {\n  Repository,\n  Hook,\n  Hooks,\n  Listener,\n  Resource,\n  File,\n  Files,\n  CheckOptions,\n  Question,\n  Questions,\n  Rule,\n  Effect,\n  CompiledFile,\n  CompiledFiles,\n} from '@/internal'\n\n\nconst ajv = new Ajv({ useDefaults: true, $data: true })\najvKeywords(ajv)\nconst validateTemplateConfig = ajv\n  .addSchema([HandlerSchema])\n  .addSchema([RuleSchema, QuestionSchema])\n  .compile(TemplateSchema)\n\n\nexport class Template {\n  public readonly repository: Repository\n\n  public path: string\n\n  public engines: string\n\n  public files: Files\n\n  public questions: Questions\n\n  public hooks: Hooks\n\n  constructor(repo: Repository, path: string, engines: string, files: Files, questions: Questions = [], hooks: Hooks = []) {\n    this.path = path\n    this.repository = repo\n    this.engines = engines\n    this.files = files\n    this.questions = questions\n    this.hooks = hooks\n  }\n\n  private async compile(resource: Resource): Promise<CompiledFiles> {\n    logger.info('compile template')\n    const promises = this.files.map(file => file.compile(resource))\n    return await Promise.all(promises)\n  }\n\n  private async ensureFolder(folders, prefix = ''): Promise<void> {\n    const promises = Object.entries(folders)\n      .map(async([name, child]) => {\n        const dir = join(prefix, name)\n        await Effect.fs.ensureDir(dir)\n        await this.ensureFolder(child, dir)\n      })\n    await Promise.all(promises)\n  }\n\n  private async ensureDir(files: CompiledFile[]): Promise<void> {\n    const folders = {}\n    files.forEach(file => {\n      const dir = dirname(file.projectPath)\n      let parent = folders\n      dir.split('/').forEach(name => {\n        const pair = name || '/'\n        let next = parent[pair]\n        if (!next) next = {}\n\n        parent[pair] = next\n        parent = next\n      })\n    })\n\n    await this.ensureFolder(folders)\n  }\n\n  public async render(resource: Resource): Promise<void> {\n    const files = await this.compile(resource)\n    logger.info('rendering')\n    await this.ensureDir(files)\n\n    const promises = files.map(file => file.render())\n    await Promise.all(promises)\n  }\n\n  public async check(resource: Resource, options?: CheckOptions): Promise<void> {\n    const files = await this.compile(resource)\n\n    const errors: string[] = []\n    const promises = files.map(async file => {\n      try {\n        await file.check(options)\n      } catch (e) {\n        errors.push(e.message)\n      }\n    })\n\n    await Promise.all(promises)\n\n    if (errors.length) {\n      errors.forEach(message => logger.error(message))\n      throw new Error('Check failed')\n    }\n  }\n\n  public static async load(repo: Repository): Promise<Template> {\n    const cwd = repo.storage\n    let entry = join(cwd, 'index.js')\n\n    try {\n      const npmConfig = await loadNpmConfig(cwd)\n      if (npmConfig.main) entry = join(cwd, npmConfig.main)\n    } catch (e) {\n    }\n\n    /**\n     * NOTE: don't change the object that return by cosmiconfig.\n     *       It was cache by cosmiconfig\n     */\n    const result = await cosmiconfig('template').load(entry)\n    if (!result) {\n      throw new Error([\n        'Cannot load template config',\n        `Maybe syntax error in ${entry}`,\n      ].join('\\n'))\n    }\n\n    const config = clone(result.config)\n\n    const valid = validateTemplateConfig(config)\n\n    if (!valid) {\n      throw new Error([\n        'There is some error in template config: ',\n        ajv.errorsText(validateTemplateConfig.errors, { dataVar: 'template' }),\n      ].join('\\n'))\n    }\n\n    /** absoult template path */\n    const path = join(cwd, config.path)\n\n    /** generate files */\n    const rules = config.rules\n      .map(item => ({ ...item, path: join(path, item.path) }))\n      .map(item => Rule.format(item))\n    const rootRule = new Rule(path, UpgradeType.Cover, true)\n\n    const files = await this.searchDirFile(path, rootRule, rules)\n\n    /** generate questions */\n    let questions: Questions = []\n    if (config.questions) questions = config.questions.map(question => new Question(question))\n\n    /** generate hooks */\n    let hooks: Hook[] = []\n    if (config.hooks) {\n      hooks = Object.entries(config.hooks)\n        .map(([name, listener]) => new Hook(name, listener as (Listener | string)))\n    }\n\n\n    return new Template(repo, path, config.engines, files, questions, hooks)\n  }\n\n\n  private static async searchDirFile(path: string, rule: Rule, rules: Rule[]): Promise<Files> {\n    const files = await Effect.fs.readdir(path)\n    const promises = files.map(async(filename: string): Promise<File | Files> => {\n      const subPath = join(path, filename)\n\n      let subRule = rules.find(rule => rule.match(subPath))\n\n      if (!subRule) subRule = rule\n      else subRule = Rule.merge(rule, subRule)\n\n      if (await isDirectory(subPath)) {\n        return await this.searchDirFile(subPath, subRule, rules)\n      }\n\n      return subRule.createFile(subPath)\n    })\n\n    const subFiles = await Promise.all(promises)\n    return unnest(subFiles) as Files\n  }\n}\n","import ejs from 'ejs'\nimport { Handler, FileGenerator, PathGenerator } from '@/internal'\n\n\nexport default function(options): Handler {\n  const genFile: FileGenerator = async(file, resource) => {\n    const view = {\n      mili: resource.mili,\n      project: resource.project,\n      template: resource.template,\n      answers: resource.answers,\n      addition: file.addition,\n    }\n\n    file.content = ejs.render(file.content, view, options)\n  }\n\n  const genPath: PathGenerator = async path => path.replace(/.ejs$/, '')\n\n  return new Handler(genFile, genPath)\n}\n","import merge from 'merge-deep'\nimport { FileGenerator } from '@/internal'\n\n\nconst mergeJson: FileGenerator = async file => {\n  let { content } = file\n\n  const beginMatched = content.match(/^\\s*/g)\n  const beginBlank = beginMatched ? beginMatched[0] : ''\n\n  const endMatched = content.match(/\\s*$/g)\n  const endBlank = endMatched ? endMatched[0] : ''\n  let result = content\n\n  if (!file.projectFileExisted) {\n    try {\n      content = JSON.parse(file.content)\n      result = JSON.stringify(content, null, '  ')\n    } catch (e) {\n      throw new Error([\n        'The template file and the current file failed to merge due to a json syntax error in the template file.',\n        'The current file will be overwritten directly by the template file.',\n        `path: ${file.templatePath}`,\n      ].join('\\n'))\n    }\n  } else {\n    let projectContent = await file.getProjectContent()\n\n    try {\n      content = JSON.parse(file.content)\n    } catch (e) {\n      throw new Error([\n        'The template file and the current file failed to merge due to a json syntax error in the template file.',\n        'The current file will be overwritten directly by the template file.',\n        `path: ${file.templatePath}`,\n      ].join('\\n'))\n    }\n\n    try {\n      projectContent = JSON.parse(projectContent)\n    } catch (e) {\n      throw new Error([\n        'The template file and the current file failed to merge due to a json syntax error in the current file.',\n        'The current file will be overwritten directly by the template file.',\n        `path: ${file.projectPath}`,\n      ].join('\\n'))\n    }\n\n    result = JSON.stringify(merge(projectContent, content), null, '  ')\n  }\n\n  file.content = `${beginBlank}${result}${endBlank}`\n}\n\nexport default mergeJson\n","import { FileGenerator } from '@/class'\nimport { unnest } from 'ramda'\n\nconst defaultBucketName = Symbol()\ninterface Item {\n  name: string | symbol\n  values: string[]\n}\n\ntype Bucket = Item[]\n\nconst classifyIgnore = (list): Bucket => {\n  let last: Item = { name: defaultBucketName, values: [] }\n  const bucket = [last]\n\n  list.forEach(item => {\n    if (/^#/.test(item)) {\n      const name = item.substring(1)\n      /** comment adjacent comments */\n      if (!last.values.length && typeof last.name !== 'symbol') {\n        last.name = `${last.name}\\n${name}`\n        return\n      }\n\n      const pair = bucket.find(item => item.name === name)\n      if (pair) {\n        last = pair\n      } else {\n        last = { name, values: [] }\n        bucket.push(last)\n      }\n    } else if (item) {\n      if (!last.values.includes(item)) last.values.push(item)\n    }\n  })\n\n  return bucket\n}\n\nconst mergeBucket = (b1: Bucket, b2: Bucket): Bucket => {\n  const bucket = b1.map(item => ({ ...item }))\n\n  b2.forEach(pair => {\n    const sameOne = bucket.find(item => item.name === pair.name)\n    if (!sameOne) {\n      bucket.push(pair)\n    } else {\n      pair.values.forEach(value => {\n        if (!(sameOne.values.includes(value))) sameOne.values = sameOne.values.concat(value)\n      })\n    }\n  })\n\n  return bucket\n}\n\nconst uniqBucket = (b1: Item[], b2: Item[]): Item[] => {\n  const allValues = unnest(b2.map(item => item.values))\n\n  return b1.map(pair => {\n    const values = pair.values.filter(item => !allValues.includes(item))\n    return { name: pair.name, values }\n  })\n}\n\nconst renderBucket = (bucket: Bucket): string => bucket\n  .filter(pair => (pair.name !== defaultBucketName || pair.values.length))\n  .map(({ name, values }) => {\n    let str = ''\n    if (typeof name === 'string') str += name.replace(/^(.*)(\\n|$)/mg, '#$1\\n')\n    str += values.join('\\n')\n\n    return str\n  })\n  .join('\\n\\n')\n\nconst mergeIgnore: FileGenerator = async file => {\n  const templateIgnoreList = file.content.split('\\n')\n\n  let projectContent = ''\n  if (file.projectFileExisted) projectContent = await file.getProjectContent()\n\n  const projectIgnoreList = projectContent.split('\\n')\n\n  const templateIgnoreBucket = classifyIgnore(templateIgnoreList)\n  const projectIgnoreBucket = classifyIgnore(projectIgnoreList)\n\n  const uniquedBucket = uniqBucket(projectIgnoreBucket, templateIgnoreBucket)\n\n  const bucket = mergeBucket(templateIgnoreBucket, uniquedBucket)\n  const result = renderBucket(bucket)\n\n  const beginMatched = file.content.match(/^\\s*/g)\n  const beginBlank = beginMatched ? beginMatched[0] : ''\n\n  const endMatched = file.content.match(/\\s*$/g)\n  const endBlank = endMatched ? endMatched[0] : ''\n\n  file.content = `${beginBlank}${result}${endBlank}`\n}\n\nexport default mergeIgnore\n","import yaml from 'js-yaml'\nimport merge from 'merge-deep'\nimport { FileGenerator } from '@/internal'\n\n\nconst mergeYaml: FileGenerator = async file => {\n  let content = file.content\n\n  const beginMatched = content.match(/^\\s*/g)\n  const beginBlank = beginMatched ? beginMatched[0] : ''\n\n  const endMatched = content.match(/\\s*$/g)\n  const endBlank = endMatched ? endMatched[0] : ''\n  let result = content\n\n  if (!file.projectFileExisted) {\n    try {\n      content = yaml.load(file.content)\n      result = yaml.dump(content).replace(/\\s*$/, '')\n    } catch (e) {\n      throw new Error([\n        'The template file and the project file failed to merge due to a json syntax error in the template file.',\n        'The project file will be overwritten directly by the template file.',\n        `path: ${file.templatePath}`,\n      ].join('\\n'))\n    }\n  } else {\n    let projectContent = await file.getProjectContent()\n\n    try {\n      content = yaml.load(file.content)\n    } catch (e) {\n      throw new Error([\n        'The template file and the project file failed to merge due to a json syntax error in the template file.',\n        'The project file will be overwritten directly by the template file.',\n        `path: ${file.templatePath}`,\n      ].join('\\n'))\n    }\n\n    try {\n      projectContent = yaml.load(projectContent)\n    } catch (e) {\n      throw new Error([\n        'The template file and the project file failed to merge due to a yaml syntax error in the project file.',\n        'The project file will be overwritten directly by the template file.',\n        `path: ${file.projectPath}`,\n      ].join('\\n'))\n    }\n\n    result = yaml.dump(merge(projectContent, content))\n      .replace(/\\s*$/, '')\n  }\n\n  file.content = `${beginBlank}${result}${endBlank}`\n}\n\nexport default mergeYaml\n","import { extname, basename } from 'path'\nimport { FileGenerator, Handler } from '@/internal'\nimport mergeJson from './merge-json'\nimport mergeIgnore from './merge-ignore'\nimport mergeYaml from './merge-yaml'\n\n\nconst jsonFileExts = ['.json']\nconst yamlFileExts = ['.yaml', '.yml']\nconst ignoreFilenames = ['.gitignore', '.npmignore', '.npmrc']\n\nconst notSupportErrorMessage = (filename, projectPath): string => [\n  `Merge files of this type(${filename}) are not supported by merge handler.`,\n  'Please change the handler and feedback this question to the developer.',\n  `Path: ${projectPath}`,\n].join('\\n')\n\n\nconst genFile: FileGenerator = async(file, resource) => {\n  const { projectPath } = file\n\n  const ext = extname(projectPath)\n  const filename = basename(projectPath)\n\n  if (jsonFileExts.includes(ext)) await mergeJson(file, resource)\n  else if (yamlFileExts.includes(ext)) await mergeYaml(file, resource)\n  else if (ignoreFilenames.includes(filename)) await mergeIgnore(file, resource)\n  else throw new Error(notSupportErrorMessage(filename, projectPath))\n}\n\nexport default new Handler(genFile)\n","import { Handler, FileGenerator } from '@/class'\n\nconst genFile: FileGenerator = async file => {\n  file.renderable = !file.projectFileExisted\n}\n\nexport default new Handler(genFile)\n","import { FileGenerator, Handler } from '@/class'\n\nexport default function(name, begin, end = begin): Handler {\n  const genFile: FileGenerator = async file => {\n    if (!file.projectFileExisted) return\n    const projectContent = await file.getProjectContent()\n\n    let beginIndex = projectContent.indexOf(begin)\n    if (beginIndex === -1) return\n\n    beginIndex += begin.length\n    const endIndex = projectContent.indexOf(end, beginIndex)\n\n    if (endIndex === -1) return\n\n    file.addition[name] = projectContent.substring(beginIndex, endIndex)\n  }\n\n  return new Handler(genFile)\n}\n","import mustache from 'mustache'\nimport { Handler, FileGenerator, PathGenerator } from '@/internal'\n\nconst genFile: FileGenerator = async(file, resource) => {\n  const view = {\n    mili: resource.mili,\n    project: resource.project,\n    template: resource.template,\n    answers: resource.answers,\n    addition: file.addition,\n  }\n\n  file.content = mustache.render(file.content, view)\n}\n\nconst genPath: PathGenerator = async path => path.replace(/.mustache$/, '')\n\nexport default new Handler(genFile, genPath)\n","import { Handler, FileGenerator } from '@/internal'\n\n\nexport default (func): Handler => {\n  const genFile: FileGenerator = async(file, resource) => {\n    file.renderable = !await func(resource)\n  }\n\n  return new Handler(genFile)\n}\n","import { Handler, FileGenerator } from '@/internal'\n\n\nexport default (func): Handler => {\n  const genFile: FileGenerator = async(file, resource) => {\n    file.deleted = Boolean(await func(resource))\n  }\n\n  return new Handler(genFile)\n}\n","import { Handler, FileGenerator, PathGenerator } from '@/internal'\nimport { parse, format } from 'path'\n\n\nconst genFile: FileGenerator = async() => {}\n\nexport default newName => {\n  const genPath: PathGenerator = async path => {\n    const p = parse(path)\n    p.base = newName\n    return format(p)\n  }\n\n  return new Handler(genFile, genPath)\n}\n","/* Fix nasty circular dependency issues */\nexport * from './class/index'\nexport * from './types'\n\nimport * as handlers from './handlers'\nexport const buildInHandlers = handlers\n","import { Repository, Resource, Project, Effect, EffectOptions } from '@/internal'\nimport { checkWorkDir } from '@/utils'\n\ninterface InitOptions {\n  cwd?: string\n  name?: string\n  noDeps?: boolean\n  version?: string\n  force?: boolean\n  repository?: string\n  effect?: EffectOptions\n}\n\nexport default async(options: InitOptions): Promise<void> => {\n  const cwd = options.cwd || process.cwd()\n  const name = options.name\n  const noDeps = options.noDeps || false\n  const version = options.version || 'latest'\n  const force = options.force || false\n\n  if (!options.repository) throw new TypeError('options.repository is required for `mili.init(options)`')\n\n  Effect.replace(options.effect)\n\n\n  if (force) await checkWorkDir(cwd)\n\n  const repo = await Repository.format(options.repository)\n  if (version) await repo.checkout(version)\n  const template = await repo.install({ noDeps })\n  const project = await Project.load(cwd)\n  if (options.name) project.name = name\n\n  const resource = new Resource('init', project, template)\n  const compiler = await resource.compile()\n\n  await compiler.render({ ignoreAnswered: true })\n  await compiler.emit('initialized')\n}\n","import { Project, Resource, Effect, EffectOptions } from '@/internal'\nimport { recursiveExecte, logger, checkWorkDir } from '@/utils'\n\ninterface UpgradeOptions {\n  cwd?: string\n  noDeps?: boolean\n  force?: boolean\n  effect?: EffectOptions\n}\n\nexport default recursiveExecte(async(options: UpgradeOptions): Promise<void> => {\n  const cwd = options.cwd || process.cwd()\n  const noDeps = options.noDeps || false\n  const force = options.force || false\n\n  Effect.replace(options.effect)\n\n  if (!force) await checkWorkDir(cwd)\n\n  const project = await Project.load(cwd)\n  const repo = await project.getTemplateRepo()\n\n  if (await repo.isLatest()) {\n    const message = 'The template is already the latest version'\n    if (!force) {\n      logger.info(message)\n      return\n    }\n\n    logger.warn(message)\n  }\n\n  await repo.checkout('latest')\n  const template = await repo.install({ noDeps })\n  const resource = new Resource('upgrade', project, template)\n\n  const compiler = await resource.compile()\n\n  await compiler.render()\n  await compiler.emit('upgraded')\n})\n","import { Project, Resource, Effect, EffectOptions } from '@/internal'\nimport { recursiveExecte, logger, checkWorkDir } from '@/utils'\nimport semver from 'semver'\n\n\ninterface UpdateOptions {\n  cwd?: string\n  noDeps?: boolean\n  version?: string\n  force?: boolean\n  effect?: EffectOptions\n}\n\nexport default recursiveExecte(async(options: UpdateOptions): Promise<void> => {\n  const cwd = options.cwd || process.cwd()\n  const noDeps = options.noDeps || false\n  const version = options.version\n  const force = options.force || false\n\n  Effect.replace(options.effect)\n\n  if (!force) await checkWorkDir(cwd)\n\n  const project = await Project.load(cwd)\n  const repo = await project.getTemplateRepo()\n\n  if (version && repo.version && semver.lt(version, repo.version)) {\n    const message = [\n      'The version number setted is lower than the current template version.',\n      \"If you're sure you want to run this command, rerun it with --force.\",\n    ].join('\\n')\n\n    if (force) logger.warn(message)\n    else throw new Error(message)\n  }\n\n  if (version) await repo.checkout(version)\n\n  const template = await repo.install({ noDeps })\n  const resource = new Resource('update', project, template)\n  const compiler = await resource.compile()\n\n  await compiler.render()\n  await compiler.emit('updated')\n})\n","import { TEMPLATE_STORAGE } from '@/consts/path'\nimport { Effect, EffectOptions } from '@/internal'\n\ninterface CleanOptions {\n  effect?: EffectOptions\n}\n\nexport default async(options: CleanOptions = {}) => {\n  Effect.replace(options.effect)\n\n  await Effect.fs.remove(TEMPLATE_STORAGE)\n}\n","import { logger } from '@/utils'\nimport { Project, Effect, EffectOptions } from '@/internal'\n\n\ninterface OutdatedOptions {\n  cwd?: string\n  effect?: EffectOptions\n}\n\nexport default async(options: OutdatedOptions = {}) => {\n  const cwd = options.cwd || process.cwd()\n  Effect.replace(options.effect)\n\n  const project = await Project.load(cwd)\n  const repo = await project.getTemplateRepo()\n\n  if (!await repo.isVerioning()) {\n    throw new Error('`mili outdated` cannot check the template without version control')\n  } else if (await repo.isLatest()) {\n    logger.info('Congratulations, the current template is the latest version.')\n  } else {\n    logger.warn([\n      '',\n      '',\n      'Project Mili Template Is Outdated',\n      'run `npx mili upgrade` to upgrade template',\n      '',\n      '',\n    ].join('\\n'))\n  }\n}\n","import { Project, Resource, Effect, EffectOptions } from '@/internal'\nimport recursiveExecte from '@/utils/recursive-execte'\n\n\ninterface CheckOptions {\n  showDiff?: boolean\n  fold?: boolean\n  cwd?: string\n  noDeps?: boolean\n  effect?: EffectOptions\n}\n\nexport default recursiveExecte(async(options: CheckOptions = {}) => {\n  const {\n    showDiff = false,\n    fold = false,\n    cwd = process.cwd(),\n    noDeps = false,\n  } = options\n\n  Effect.replace(options.effect)\n\n  const project = await Project.load(cwd)\n  const repo = await project.getTemplateRepo()\n\n  const template = await repo.install({ noDeps })\n  const resource = new Resource('check', project, template)\n  const compiler = await resource.compile()\n\n  await compiler.check({ showDiff , fold })\n  await compiler.emit('checked')\n})\n"],"names":["exec","diffFile","inferEncodingNormally","Template","gitUrlRegexp","Handler","Question","identity","ajv","validate","Rule","ejs","genFile","mustache"],"mappings":"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"}